{"version":3,"sources":["services/TheMovieService.js","components/header/logo.png","components/header/index.js","components/header/header.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","components/movies-service-context/m-api-service-context.js","components/spinner/index.js","components/spinner/spinner.js","components/item-details/item-details.js","components/item-details/index.js","components/hoc-helper/with-data.js","components/hoc-helper/with-api-service.js","components/movie-components/person-details.js","components/movie-components/movie-details.js","components/item-list/item-list.js","components/item-list/index.js","components/movie-components/item-lists.js","components/row/index.js","components/row/row.js","components/pages/people-page.js","components/pages/movies-page.js","components/random-movie/random-movie.js","components/random-movie/index.js","components/pages/home-page.js","components/app/index.js","components/app/app.js","index.js"],"names":["TheMovieService","_baseUrl","_apiKey","getResource","url","a","fetch","res","ok","Error","status","body","json","getMovie","id","movie","_transformMovieDetail","getGenresList","getGenre","genres","getPopularMovies","peopleList","results","map","getPopularPeople","_transformPersonList","getPerson","person","_transformPersonDetail","name","rating","popularity","img","profile_path","original_title","releaseDate","_transformDateFormat","release_date","vote_average","poster_path","overview","birthday","gender","getPersonGender","bio","biography","knownFor","also_known_as","arrayToString","array","newArray","forEach","el","push","join","date","split","reverse","numb","Header","className","to","src","Logo","width","height","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","ErrorIndicator","ErrorBoundry","state","hasError","this","setState","props","children","Component","React","createContext","MoviesServiceProvider","Provider","MoviesServiceConsumer","Consumer","Spinner","Record","item","field","label","ItemDetails","movieService","itemId","loading","onItemLoaded","updateItem","prevProps","itemLoadingSpinner","getData","then","content","ItemDetailsView","Fragment","Children","child","idx","cloneElement","withData","View","data","withApiService","Wrapped","mapMethodsToProps","movieServices","serviceProps","ItemList","onItemSelected","renderLabel","items","onClick","defaultProps","withChildFunction","fn","renderView","PersonList","MovieList","Row","leftElement","rightElement","leftCol","rightCol","classNameLeft","classNameRight","withRouter","history","match","params","MoviesPage","RandomMovie","error","onMovieLoaded","movies","Math","floor","random","length","onError","err","updateMovie","catch","updateInterval","interval","setInterval","clearInterval","hasData","errorMsg","spinner","MovieView","moviePoster","movieInfo","href","HomePage","App","value","path","component","exact","PeoplePage","render","ReactDom","document","getElementById"],"mappings":"4WAAqBA,E,iDACnBC,SAAW,+B,KACXC,QAAU,mC,KAEVC,Y,uCAAc,WAAOC,GAAP,iBAAAC,EAAA,sEACMC,MAAM,GAAD,OAAI,EAAKL,UAAT,OAAoBG,EAApB,oBAAmC,EAAKF,UADnD,WACNK,EADM,QAEHC,GAFG,sBAGJ,IAAIC,MAAJ,0BAA6BL,EAA7B,sBAA8CG,EAAIG,SAH9C,cAKNC,EAAOJ,EAAIK,OALL,kBAMLD,GANK,2C,2DASdE,S,uCAAW,WAAOC,GAAP,eAAAT,EAAA,sEACW,EAAKF,YAAL,iBAA2BW,IADtC,cACHC,EADG,yBAEF,EAAKC,sBAAsBD,IAFzB,2C,2DAKXE,c,sBAAgB,sBAAAZ,EAAA,+EACP,EAAKF,YAAL,gBADO,2C,KAIhBe,S,uCAAW,WAAOJ,GAAP,eAAAT,EAAA,6DACHc,EAAS,EAAKF,gBADX,kBAEFE,GAFE,2C,2DAKXC,iB,sBAAmB,4BAAAf,EAAA,sEACQ,EAAKF,YAAL,kBADR,cACXkB,EADW,yBAEVA,EAAWC,QAAQC,IAAI,EAAKP,wBAFlB,2C,KAKnBQ,iB,sBAAmB,4BAAAnB,EAAA,sEACQ,EAAKF,YAAL,mBADR,cACXkB,EADW,yBAEVA,EAAWC,QAAQC,IAAI,EAAKE,uBAFlB,2C,KAKnBC,U,uCAAY,WAAOZ,GAAP,eAAAT,EAAA,sEACW,EAAKF,YAAL,kBAA4BW,IADvC,cACJa,EADI,yBAEH,EAAKC,uBAAuBD,IAFzB,2C,2DAKZF,qBAAuB,SAACE,GACtB,MAAO,CACLb,GAAIa,EAAOb,GACXe,KAAMF,EAAOE,KACbC,OAAQH,EAAOI,WACfC,IAAKL,EAAOM,e,KAIhBjB,sBAAwB,SAACD,GACvB,MAAO,CACLD,GAAIC,EAAMD,GACVe,KAAMd,EAAMmB,eACZC,YAAa,EAAKC,qBAAqBrB,EAAMsB,cAC7CP,OAAQf,EAAMuB,aACdN,IAAKjB,EAAMwB,YACXC,SAAUzB,EAAMyB,W,KAIpBZ,uBAAyB,SAACD,GACxB,MAAO,CACLb,GAAIa,EAAOb,GACXe,KAAMF,EAAOE,KACbY,SAAU,EAAKL,qBAAqBT,EAAOc,UAC3CC,OAAQ,EAAKC,gBAAgBhB,EAAOe,QACpCE,IAAKjB,EAAOkB,UACZd,WAAYJ,EAAOI,WACnBe,SAAUnB,EAAOoB,cACjBf,IAAKL,EAAOM,e,KAIhBe,cAAgB,SAACC,GACf,IAAMC,EAAW,GAIjB,OAHAD,EAAME,SAAQ,SAAAC,GACZF,EAASG,KAAKD,EAAGvB,SAEZqB,EAASI,KAAK,O,KAGvBlB,qBAAuB,SAACmB,GACtB,OAAKA,EAGaA,EAAKC,MAAM,KAAKC,UACRH,KAAK,KAHtB,O,KAQXX,gBAAkB,SAACe,GACjB,OAAa,IAATA,EAAmB,SAChB,S,QC/FI,MAA0B,iCCE1BC,ECGA,WACX,OACI,8BACI,sBAAKC,UAAU,sCAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,eAAvB,SACI,qBAAKE,IAAKC,EAAMC,MAAM,KAAKC,OAAO,KAAKL,UAAU,2BAA2BM,IAAI,WAEpF,wBAAQN,UAAU,iBAAiBO,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,oBAA5J,SACI,sBAAMZ,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2B9C,GAAG,YAA7C,SACI,qBAAI8C,UAAU,aAAd,UACI,oBAAIA,UAAU,kBAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,IAA9B,oBAEJ,oBAAID,UAAU,kBAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,WAA9B,sBAEJ,oBAAID,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,WAA9B,iCCtBbY,G,MCEQ,WACnB,OACI,sBAAKb,UAAU,oCAAf,UACI,sBAAMA,UAAU,OAAhB,qBACA,oEAGA,mECTGc,E,4MCEXC,MAAQ,CACJC,UAAU,G,kEAIVC,KAAKC,SAAS,CACVF,UAAU,M,+BAKd,OAAGC,KAAKF,MAAMC,SACH,cAAC,EAAD,IAGJC,KAAKE,MAAMC,a,GAhBgBC,a,ECAEC,IAAMC,gBAD/BC,E,EAAXC,SACUC,E,EAAVC,S,cCDOC,G,MCCC,WACd,OACE,qBAAK5B,UAAU,0CAAf,SACE,sBAAKA,UAAU,OAAf,UACE,wBACA,wBACA,8BACE,0BAEF,8BACE,iCCPJ6B,G,MAAS,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC3B,OACI,qBAAIhC,UAAU,kBAAd,UACI,uBAAMA,UAAU,YAAhB,UAA6BgC,EAA7B,QACA,iCAAQF,EAAKC,GAAb,YASSE,E,4MAEjBC,aAAe,IAAI9F,E,EAEnB2E,MAAQ,CACJoB,OAAQ,KACRC,SAAS,G,EAoBbC,aAAe,SAACP,GACZ,EAAKZ,SAAS,CACVY,OACAM,SAAS,K,kEAnBbnB,KAAKqB,e,yCAGUC,GACZtB,KAAKE,MAAMgB,SAAWI,EAAUJ,SAC/BlB,KAAKuB,qBACLvB,KAAKqB,gB,2CAKTrB,KAAKC,SAAS,CACVkB,SAAS,M,mCAWH,IAAD,EACmBnB,KAAKE,MAAzBgB,EADC,EACDA,OAAQM,EADP,EACOA,QACXN,GAILM,EAAQN,GACPO,KAAKzB,KAAKoB,gB,+BAKX,IAAIpB,KAAKF,MAAMe,KACX,OAAO,sBAAM9B,UAAU,gCAAhB,uCAHN,MAMqBiB,KAAKF,MAAvBe,EANH,EAMGA,KACFa,EAPD,EAMSP,QACY,cAAC,EAAD,IAAc,cAAC,EAAD,CAAiBN,KAAMA,EAAMV,SAAUH,KAAKE,MAAMC,WAE1F,OACI,qBAAKpB,UAAU,gCAAf,SACM2C,Q,GAtDuBtB,aA6DnCuB,EAAkB,SAAC,GAAwB,IAAtBd,EAAqB,EAArBA,KAAMV,EAAe,EAAfA,SAErBhD,EAAQ0D,EAAR1D,IAER,OACI,eAAC,IAAMyE,SAAP,WACI,qBAAK7C,UAAU,mBAAmBE,IAAG,wCAAmC9B,GAAOkC,IAAI,QACnF,oBAAIN,UAAU,8BAAd,SAEQsB,IAAMwB,SAASnF,IAAIyD,GAAU,SAAC2B,EAAOC,GACjC,OAAO1B,IAAM2B,aAAaF,EAAO,CAAEjB,kBCpF5CG,ICsBAiB,EAzBE,SAACC,GACd,mNAEIpC,MAAQ,CACJqC,KAAM,MAHd,kEAMyB,IAAD,OAChBnC,KAAKE,MAAMsB,UAAUC,MAAK,SAACU,GACvB,EAAKlC,SAAS,CACVkC,cAThB,+BAcc,IACEA,EAASnC,KAAKF,MAAdqC,KACR,OAAKA,EAGE,cAACD,EAAD,2BAAUlC,KAAKE,OAAf,IAAsBiC,KAAMA,KAFxB,cAAC,EAAD,QAjBnB,GAAqB/B,cCgBVgC,EAjBQ,SAACC,EAASC,GAC7B,OAAO,SAACpC,GACJ,OACI,cAACO,EAAD,UAEQ,SAAC8B,GACG,IAAMC,EAAeF,EAAkBC,GACvC,OACI,cAACF,EAAD,2BAAanC,GAAWsC,SCUrCJ,KAhBO,SAAClC,GACnB,OACI,eAAC,EAAD,2BAAiBA,GAAjB,cACI,cAAC,EAAD,CAAQY,MAAM,OAAOC,MAAM,SAC3B,cAAC,EAAD,CAAQD,MAAM,SAASC,MAAM,WAC7B,cAAC,EAAD,CAAQD,MAAM,WAAWC,MAAM,oBAKjB,SAACE,GACvB,MAAO,CACHO,QAASP,EAAapE,cCKfuF,KAjBM,SAAClC,GAClB,OACI,eAAC,EAAD,2BAAiBA,GAAjB,cACI,cAAC,EAAD,CAAQY,MAAM,OAAOC,MAAM,SAC3B,cAAC,EAAD,CAAQD,MAAM,cAAcC,MAAM,iBAClC,cAAC,EAAD,CAAQD,MAAM,SAASC,MAAM,WAC7B,cAAC,EAAD,CAAQD,MAAM,WAAWC,MAAM,oBAKjB,SAACE,GACvB,MAAO,CACHO,QAASP,EAAajF,aCbxByG,G,MAAW,SAACvC,GAAW,IACjBiC,EAAgDjC,EAAhDiC,KAAMO,EAA0CxC,EAA1CwC,eAA0BC,EAAgBzC,EAA1BC,SAExByC,EAAQT,EAAKzF,KAAI,SAACmE,GAAU,IACtB5E,EAAO4E,EAAP5E,GACF8E,EAAQ4B,EAAY9B,GAC1B,OACI,oBAAI9B,UAAU,kBAEN8D,QAAS,kBAAMH,EAAezG,IAFtC,SAGM8E,GAFO9E,MAOrB,OACI,oBAAI8C,UAAU,iBAAd,SACM6D,MAKdH,EAASK,aAAe,CACpBJ,eAAgB,cASLD,ICnCAA,EDmCAA,EEjCTM,EAAoB,SAACV,EAASW,GAChC,OAAO,SAAC9C,GACJ,OACI,cAACmC,EAAD,2BAAanC,GAAb,aACK8C,OAMXC,EAAa,SAAC,GAAmB,IAAjBjG,EAAgB,EAAhBA,KAAMG,EAAU,EAAVA,IACxB,OACI,gCACI,sBAAM4B,UAAU,iBAAhB,SAAkC/B,IAClC,qBAAK+B,UAAU,gBAAgBE,IAAG,wCAAmC9B,GAAOkC,IAAI,eAiBtF6D,EAAad,EACfH,EACIc,EAAkBN,EAAUQ,KAdJ,SAAChC,GAC7B,MAAO,CACHO,QAASP,EAAatE,qBAiBxBwG,EAAYf,EACdH,EACIc,EAAkBN,EAAUQ,KAfL,SAAChC,GAC5B,MAAO,CACHO,QAASP,EAAa1E,qBC7Bf6G,G,MCGH,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,YAAaC,EAA0C,EAA1CA,aAA0C,IAA5BC,eAA4B,MAApB,EAAoB,MAAjBC,gBAAiB,MAAR,EAAQ,EAE5DC,EAAa,iBAAaF,GAC1BG,EAAc,iBAAaF,GAEjC,OACI,sBAAKzE,UAAU,WAAf,UACI,qBAAKA,UAAW0E,EAAhB,SACMJ,IAEN,qBAAKtE,UAAW2E,EAAhB,SACMJ,SCGHK,eAdI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAEV3H,EAF+B,EAAZ4H,MAENC,OAAb7H,GAER,OACI,cAAC,EAAD,CACIoH,YAAc,cAACH,EAAD,CAAYR,eAAgB,SAACzG,GAAD,OAAQ2H,EAAQpF,KAAR,UAAgBvC,OAClEqH,aAAe,cAAC,EAAD,CAAepC,OAAQjF,IACtCsH,QAAS,EACTC,SAAU,OCDPO,EAVI,SAAC,GAAiB,IAAfH,EAAc,EAAdA,QAClB,OACI,cAACT,EAAD,CACIT,eAAgB,SAACxB,GACb0C,EAAQpF,KAAR,UAAgB0C,QCGX8C,G,kNAUjB/C,aAAe,IAAI9F,E,EAEnB2E,MAAQ,CACJ5D,MAAO,GACPiF,SAAS,EACT8C,OAAO,G,EAaXC,cAAgB,SAACC,GACb,IAAMjI,EAAQiI,EAAOC,KAAKC,MAAMD,KAAKE,SAAWH,EAAOI,SACvD,EAAKtE,SAAS,CACV/D,QACAiF,SAAS,K,EAIjBqD,QAAU,SAACC,GACP,EAAKxE,SAAS,CACVgE,OAAO,EACP9C,SAAS,K,EAIjBuD,YAAc,WACV,EAAKzD,aAAa1E,mBACbkF,KAAK,EAAKyC,eACVS,MAAM,EAAKH,U,kEA5BC,IACTI,EAAmB5E,KAAKE,MAAxB0E,eACR5E,KAAK0E,cACL1E,KAAK6E,SAAWC,YAAY9E,KAAK0E,YAAaE,K,6CAI9CG,cAAc/E,KAAK6E,Y,+BAwBb,IAAD,EAC6B7E,KAAKF,MAA/B5D,EADH,EACGA,MAAOiF,EADV,EACUA,QAAS8C,EADnB,EACmBA,MAElBe,IAAY7D,GAAW8C,GAEvBgB,EAAWhB,EAAQ,cAAC,EAAD,IAAqB,KACxCiB,EAAU/D,EAAU,cAAC,EAAD,IAAc,KAClCO,EAAUsD,EAAU,cAAC,EAAD,CAAW9I,MAAOA,IAAY,KAExD,OACI,sBAAK6C,UAAU,sCAAf,UACKkG,EACAC,EACAxD,S,GA9DwBtB,cAApB4D,EAEVlB,aAAe,CAClB8B,eAAgB,KAkExB,IAAMO,EAAY,SAAC,GAAe,IAAbjJ,EAAY,EAAZA,MAETD,EAAiDC,EAAjDD,GAAIe,EAA6Cd,EAA7Cc,KAAMM,EAAuCpB,EAAvCoB,YAAaL,EAA0Bf,EAA1Be,OAAQE,EAAkBjB,EAAlBiB,IAAKQ,EAAazB,EAAbyB,SAEtCyH,EACF,qBAAKrG,UAAU,qBAAqBE,IAAG,wCAAmC9B,GAAOkC,IAAI,QAGnFgG,EACF,qBAAItG,UAAU,8BAAd,UACI,qBAAIA,UAAU,kBAAd,UACI,sBAAMA,UAAU,YAAhB,wBACA,+BACI,mBAAGuG,KAAI,iBAAYrJ,GAAnB,SACKe,SAIb,qBAAI+B,UAAU,kBAAd,UACI,sBAAMA,UAAU,YAAhB,4BACA,+BAAOzB,OAEX,qBAAIyB,UAAU,kBAAd,UACI,sBAAMA,UAAU,YAAhB,sBACA,+BAAO9B,OAEX,qBAAI8B,UAAU,kBAAd,UACI,sBAAMA,UAAU,YAAhB,wBACA,+BAAOpB,UAKnB,OACI,eAAC,IAAMiE,SAAP,WACI,wDACA,cAAC,EAAD,CACIyB,YAAa+B,EAAa9B,aAAc+B,EACxC9B,QAAS,EAAGC,SAAU,QCnHvBQ,ICUAuB,EATE,WACb,OACI,gCACI,oBAAIxG,UAAU,wBAAd,oCACA,cAAC,EAAD,QCLGyG,G,wNCYbjD,cAAgB,IAAIpH,E,kEAGlB6E,KAAKC,SAAS,CAAEF,UAAU,M,+BAI1B,OACE,cAAC,EAAD,UACE,cAACQ,EAAD,CAAuBkF,MAAOzF,KAAKuC,cAAnC,SACE,cAAC,IAAD,UACE,gCACE,cAAC,EAAD,IACA,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOmD,KAAK,IAAIC,UAAWJ,EAAUK,OAAK,IAC1C,cAAC,IAAD,CAAOF,KAAK,eAAeC,UAAWE,IACtC,cAAC,IAAD,CAAOH,KAAK,UAAUE,OAAK,EAACD,UAAW5B,IACvC,cAAC,IAAD,CAAO2B,KAAK,cACVI,OAAQ,YAAgB,IAAbjC,EAAY,EAAZA,MACT,OAAO,cAAC,EAAD,CAAc3C,OAAQ2C,EAAMC,OAAO7H,QAI9C,cAAC,IAAD,CAAO6J,OAAQ,kBAAO,mE,GA1BL1F,cCPjC2F,IAASD,OAAO,cAAC,EAAD,IAAQE,SAASC,eAAe,W","file":"static/js/main.3ff9d925.chunk.js","sourcesContent":["export default class TheMovieService {\r\n  _baseUrl = 'https://api.themoviedb.org/3';\r\n  _apiKey = '4d8b2f4b197b6cc4163b866a0d50a1f9';\r\n\r\n  getResource = async (url) => {\r\n    const res = await fetch(`${this._baseUrl}${url}?api_key=${this._apiKey}`)\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}, received ${res.status}`);\r\n    }\r\n    const body = res.json();\r\n    return body;\r\n  }\r\n\r\n  getMovie = async (id) => {\r\n    const movie = await this.getResource(`/movie/${id}`);\r\n    return this._transformMovieDetail(movie);\r\n  }\r\n\r\n  getGenresList = async () => {\r\n    return this.getResource(`/genre/list`);\r\n  }\r\n\r\n  getGenre = async (id) => {\r\n    const genres = this.getGenresList();\r\n    return genres\r\n  }\r\n\r\n  getPopularMovies = async () => {\r\n    const peopleList = await this.getResource(`/movie/popular`);\r\n    return peopleList.results.map(this._transformMovieDetail);\r\n  }\r\n\r\n  getPopularPeople = async () => {\r\n    const peopleList = await this.getResource(`/person/popular`);\r\n    return peopleList.results.map(this._transformPersonList);\r\n  }\r\n\r\n  getPerson = async (id) => {\r\n    const person = await this.getResource(`/person/${id}`);\r\n    return this._transformPersonDetail(person);\r\n  }\r\n\r\n  _transformPersonList = (person) => {\r\n    return {\r\n      id: person.id,\r\n      name: person.name,\r\n      rating: person.popularity,\r\n      img: person.profile_path\r\n    }\r\n  }\r\n\r\n  _transformMovieDetail = (movie) => {\r\n    return {\r\n      id: movie.id,\r\n      name: movie.original_title,\r\n      releaseDate: this._transformDateFormat(movie.release_date),\r\n      rating: movie.vote_average,\r\n      img: movie.poster_path,\r\n      overview: movie.overview,\r\n    }\r\n  }\r\n\r\n  _transformPersonDetail = (person) => {\r\n    return {\r\n      id: person.id,\r\n      name: person.name,\r\n      birthday: this._transformDateFormat(person.birthday),\r\n      gender: this.getPersonGender(person.gender),\r\n      bio: person.biography,\r\n      popularity: person.popularity,\r\n      knownFor: person.also_known_as,\r\n      img: person.profile_path\r\n    }\r\n  }\r\n\r\n  arrayToString = (array) => {\r\n    const newArray = [];\r\n    array.forEach(el => {\r\n      newArray.push(el.name);\r\n    });\r\n    return newArray.join(', ');\r\n  }\r\n\r\n  _transformDateFormat = (date) => {\r\n    if (!date) {\r\n      return '---';\r\n    }\r\n    const dateArray = date.split('-').reverse();\r\n    const newDate = dateArray.join('/');\r\n\r\n    return newDate;\r\n  }\r\n\r\n  getPersonGender = (numb) => {\r\n    if (numb === 1) return 'female'\r\n    return 'male';\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.b713f270.png\";","import Header from './header';\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Logo from './logo.png';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark\">\r\n                <Link to=\"/\" className=\"navbar-brand\">\r\n                    <img src={Logo} width=\"50\" height=\"50\" className=\"d-inline-block align-top\" alt=\"Logo\" />\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link\" to=\"/people/\">People</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/movies/\">Movies</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <div className=\"jumbotron rounded error-indicator\">\r\n            <span className=\"boom\"> BOOM! </span>\r\n            <span>\r\n                Sorry, something has gone wrong!\r\n            </span>\r\n            <span> (but we already fix it!) </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorIndicator;","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n    state = {\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({ \r\n            hasError: true \r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return <ErrorIndicator />\r\n        }\r\n        \r\n        return this.props.children;\r\n    }\r\n}","import React from 'react';\r\n\r\nconst { Provider : MoviesServiceProvider, \r\n        Consumer: MoviesServiceConsumer } = React.createContext();\r\n\r\nexport {\r\n    MoviesServiceProvider,\r\n    MoviesServiceConsumer\r\n};","import Spinner from './spinner';\n\nexport default Spinner;","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n  return (\n    <div className=\"loadingio-spinner-double-ring mt-2 mb-2\">\n      <div className=\"ldio\">\n        <div></div>\n        <div></div>\n        <div>\n          <div></div>\n        </div>\n        <div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spinner;","import React, { Component } from 'react';\r\nimport TheMovieService from '../../services/TheMovieService';\r\nimport Spinner from '../spinner';\r\n\r\nimport './item-details.css';\r\n\r\nconst Record = ({ item, field, label }) => {\r\n    return(\r\n        <li className=\"list-group-item\">\r\n            <span className=\"text-info\">{label}: </span>\r\n            <span>{ item[field] } </span>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport {\r\n    Record\r\n};\r\n\r\nexport default class ItemDetails extends Component {\r\n\r\n    movieService = new TheMovieService();\r\n    \r\n    state = {\r\n        itemId: null,\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateItem();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.itemId !== prevProps.itemId) {\r\n            this.itemLoadingSpinner();\r\n            this.updateItem();\r\n        }\r\n    }\r\n\r\n    itemLoadingSpinner() {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n      }\r\n    \r\n    onItemLoaded = (item) => {\r\n        this.setState({\r\n            item,\r\n            loading: false\r\n        });\r\n      };\r\n\r\n    updateItem() {        \r\n        const { itemId, getData } = this.props;\r\n        if (!itemId) {\r\n            return;\r\n        }\r\n\r\n        getData(itemId)\r\n        .then(this.onItemLoaded)\r\n    }\r\n\r\n    render() {\r\n\r\n        if(!this.state.item) {\r\n            return <span className=\"item-detail jumbotron rounded\">Select a item from a list</span>\r\n        }\r\n        \r\n        const { item, loading } = this.state;\r\n        const content = loading ? <Spinner /> : <ItemDetailsView item={item} children={this.props.children} />\r\n\r\n        return(\r\n            <div className=\"item-detail jumbotron rounded\">                   \r\n                { content }                \r\n            </div>            \r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst ItemDetailsView = ({ item, children }) => {\r\n        \r\n    const { img } = item;\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <img className=\"item-img rounded\" src={`http://image.tmdb.org/t/p/w185${img}`} alt=\"img\"/>            \r\n            <ul className=\"list-group list-group-flush\">                \r\n                { \r\n                    React.Children.map(children, (child, idx) => {\r\n                        return React.cloneElement(child, { item });\r\n                    })\r\n                }\r\n            </ul>       \r\n        </React.Fragment>\r\n    )\r\n}","import ItemDetails, { Record } from './item-details';\r\n\r\nexport {\r\n    Record,\r\n}\r\n\r\nexport default ItemDetails;","import React, { Component } from 'react';\r\nimport Spinner from '../spinner';\r\n\r\nconst withData = (View) => {\r\n    return class extends Component {\r\n\r\n        state = {\r\n            data: null\r\n        }\r\n    \r\n        componentDidMount() {                        \r\n            this.props.getData().then((data) => {                \r\n                this.setState({\r\n                    data\r\n                });\r\n            });\r\n        }\r\n\r\n        render() {\r\n            const { data } = this.state;                \r\n            if (!data) {\r\n                return <Spinner />;\r\n            }\r\n            return <View {...this.props} data={data} />\r\n        }\r\n    };\r\n};\r\n\r\nexport default withData;","import React from 'react';\r\nimport { MoviesServiceConsumer } from '../movies-service-context';\r\n\r\nconst withApiService = (Wrapped, mapMethodsToProps) => {\r\n    return (props) => {\r\n        return (\r\n            <MoviesServiceConsumer>\r\n                {\r\n                    (movieServices) => {\r\n                        const serviceProps = mapMethodsToProps(movieServices);\r\n                        return (\r\n                            <Wrapped {...props} {...serviceProps} /> \r\n                        )\r\n                    }\r\n                }\r\n            </MoviesServiceConsumer>\r\n        )\r\n    };\r\n};\r\n\r\nexport default withApiService;","import React from 'react';\r\n\r\nimport ItemDetails, { Record } from '../item-details';\r\nimport { withApiService } from '../hoc-helper';\r\n\r\nconst PersonDetails = (props) => {    \r\n    return(\r\n        <ItemDetails {...props}>\r\n            <Record field=\"name\" label=\"Name\" />\r\n            <Record field=\"gender\" label=\"Gender\" />\r\n            <Record field=\"birthday\" label=\"Birthday\" />\r\n        </ItemDetails>\r\n    );    \r\n}\r\n\r\nconst mapMethodsToProps = (movieService) => {\r\n    return {\r\n        getData: movieService.getPerson\r\n    }\r\n}\r\n\r\nexport default withApiService(PersonDetails, mapMethodsToProps);","import React from 'react';\r\n\r\nimport ItemDetails, { Record } from '../item-details';\r\nimport { withApiService } from '../hoc-helper';\r\n\r\nconst MovieDetails = (props) => {\r\n    return (\r\n        <ItemDetails {...props}>\r\n            <Record field=\"name\" label=\"Name\" />\r\n            <Record field=\"releaseDate\" label=\"Release date\" />\r\n            <Record field=\"rating\" label=\"Rating\" />\r\n            <Record field=\"overview\" label=\"Overview\" />\r\n        </ItemDetails>\r\n    );\r\n}\r\n\r\nconst mapMethodsToProps = (movieService) => {\r\n    return {\r\n        getData: movieService.getMovie\r\n    }\r\n}\r\n\r\nexport default withApiService(MovieDetails, mapMethodsToProps);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './item-list.css';\r\n\r\nconst ItemList = (props) => {\r\n    const { data, onItemSelected, children: renderLabel } = props;\r\n\r\n    const items = data.map((item) => {        \r\n        const { id } = item;        \r\n        const label = renderLabel(item);\r\n        return(\r\n            <li className=\"list-group-item\" \r\n                    key={id}\r\n                    onClick={() => onItemSelected(id)}>\r\n                { label }\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return(            \r\n        <ul className=\"item-list mb-4\">\r\n            { items }\r\n        </ul>\r\n    )            \r\n}\r\n\r\nItemList.defaultProps = {\r\n    onItemSelected: () => {}\r\n}\r\n\r\nItemList.propTypes = {\r\n    onItemSelected: PropTypes.func,\r\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    children: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ItemList;","import ItemList from './item-list';\r\n\r\nexport default ItemList;","import React from 'react';\r\nimport ItemList from '../item-list';\r\nimport { withData, withApiService } from '../hoc-helper';\r\n\r\nconst withChildFunction = (Wrapped, fn) => {\r\n    return (props) => {\r\n        return (\r\n            <Wrapped {...props}>\r\n                {fn}\r\n            </Wrapped>\r\n        )\r\n    }\r\n}\r\n\r\nconst renderView = ({ name, img }) => {\r\n    return (\r\n        <div>\r\n            <span className=\"item-list-name\">{name}</span>\r\n            <img className=\"item-list-img\" src={`http://image.tmdb.org/t/p/w185${img}`} alt=\"poster\" />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapPersonMathodsToProps = (movieService) => {\r\n    return {\r\n        getData: movieService.getPopularPeople\r\n    }\r\n};\r\n\r\nconst mapMovieMathodsToProps = (movieService) => {\r\n    return {\r\n        getData: movieService.getPopularMovies\r\n    }\r\n};\r\n\r\nconst PersonList = withApiService(\r\n    withData(\r\n        withChildFunction(ItemList, renderView)\r\n    ),\r\n    mapPersonMathodsToProps\r\n);\r\n\r\nconst MovieList = withApiService(\r\n    withData(\r\n        withChildFunction(ItemList, renderView)\r\n    ),\r\n    mapMovieMathodsToProps\r\n);\r\n\r\nexport {\r\n    PersonList,\r\n    MovieList\r\n}\r\n\r\n","import Row from './row';\r\n\r\nexport default Row;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './row.css';\r\n\r\nconst Row = ({ leftElement, rightElement, leftCol=6, rightCol=6 }) => {\r\n\r\n    const classNameLeft = `col-md-${leftCol}`;\r\n    const classNameRight = `col-md-${rightCol}`;\r\n\r\n    return(\r\n        <div className=\"row mb-2\">\r\n            <div className={classNameLeft}>\r\n                { leftElement }\r\n            </div>\r\n            <div className={classNameRight}>\r\n                { rightElement }\r\n            </div>        \r\n        </div>\r\n    )\r\n}\r\n\r\nRow.propTypes = {\r\n    left: PropTypes.node,\r\n    right: PropTypes.node\r\n};\r\n\r\nexport default Row;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { PersonList, PersonDetails } from '../movie-components';\r\nimport Row from '../row';\r\n\r\nconst PeoplePage = ({ history, match }) => {\r\n\r\n    const { id } = match.params;\r\n\r\n    return(            \r\n        <Row \r\n            leftElement={ <PersonList onItemSelected={(id) => history.push(`${id}`)}/> }\r\n            rightElement={ <PersonDetails itemId={id}/> }            \r\n            leftCol={7}\r\n            rightCol={5}\r\n        />        \r\n    );\r\n}\r\n\r\nexport default withRouter(PeoplePage);","import React from 'react';\r\nimport { MovieList } from '../movie-components';\r\n\r\nconst MoviesPage = ({ history }) => {\r\n    return(            \r\n        <MovieList \r\n            onItemSelected={(itemId) => {        \r\n                history.push(`${itemId}`);\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default MoviesPage;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TheMovieService from '../../services/TheMovieService';\r\nimport Spinner from '../spinner';\r\nimport ErrorIndicator from '../error-indicator';\r\nimport Row from '../row';\r\n\r\nimport './random-movie.css';\r\n\r\nexport default class RandomMovie extends Component {\r\n\r\n    static defaultProps = {\r\n        updateInterval: 4000\r\n    }\r\n\r\n    static propTypes = {\r\n        updateInterval: PropTypes.number\r\n    };\r\n\r\n    movieService = new TheMovieService();\r\n\r\n    state = {\r\n        movie: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { updateInterval } = this.props;\r\n        this.updateMovie();\r\n        this.interval = setInterval(this.updateMovie, updateInterval);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    onMovieLoaded = (movies) => {\r\n        const movie = movies[Math.floor(Math.random() * movies.length)];\r\n        this.setState({\r\n            movie,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    onError = (err) => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        });\r\n    };\r\n\r\n    updateMovie = () => {\r\n        this.movieService.getPopularMovies()\r\n            .then(this.onMovieLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    render() {\r\n        const { movie, loading, error } = this.state;\r\n\r\n        const hasData = !(loading || error);\r\n\r\n        const errorMsg = error ? <ErrorIndicator /> : null;\r\n        const spinner = loading ? <Spinner /> : null;\r\n        const content = hasData ? <MovieView movie={movie} /> : null;\r\n\r\n        return (\r\n            <div className=\"random-movie jumbotron rounded mt-3\">\r\n                {errorMsg}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst MovieView = ({ movie }) => {\r\n\r\n    const { id, name, releaseDate, rating, img, overview } = movie;\r\n\r\n    const moviePoster = (\r\n        <img className=\"poster-img rounded\" src={`http://image.tmdb.org/t/p/w300${img}`} alt=\"img\" />\r\n    );\r\n\r\n    const movieInfo = (\r\n        <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\">\r\n                <span className=\"text-info\">   Name:  </span>\r\n                <span>\r\n                    <a href={`movies/${id}`}>\r\n                        {name}\r\n                    </a>\r\n                </span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"text-info\">Release Date: </span>\r\n                <span>{releaseDate}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"text-info\">Rating: </span>\r\n                <span>{rating}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n                <span className=\"text-info\">Overview: </span>\r\n                <span>{overview}</span>\r\n            </li>\r\n        </ul>\r\n    )\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h3> Popular daily movies </h3>\r\n            <Row\r\n                leftElement={moviePoster} rightElement={movieInfo}\r\n                leftCol={3} rightCol={9}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n","import RandomMovie from './random-movie';\r\n\r\nexport default RandomMovie;","import React from 'react';\r\nimport RandomMovie from '../random-movie';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n            <h2 className=\"jumbotron text-center\">Welcome to Movies App!</h2>\r\n            <RandomMovie />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport TheMovieService from '../../services/TheMovieService';\r\nimport Header from '../header';\r\nimport ErrorBoundry from '../error-boundry';\r\nimport { MoviesServiceProvider } from '../movies-service-context'\r\nimport { PeoplePage, MoviesPage, HomePage } from '../pages';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport \"bootswatch/dist/darkly/bootstrap.min.css\";\r\nimport './app.css';\r\nimport { MovieDetails } from '../movie-components';\r\n\r\nexport default class App extends Component {\r\n\r\n  movieServices = new TheMovieService();\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ErrorBoundry>\r\n        <MoviesServiceProvider value={this.movieServices} >\r\n          <Router>\r\n            <div>\r\n              <Header />\r\n              <Switch>\r\n\r\n                <Route path=\"/\" component={HomePage} exact />\r\n                <Route path=\"/people/:id?\" component={PeoplePage} />\r\n                <Route path=\"/movies\" exact component={MoviesPage} />\r\n                <Route path=\"/movies/:id\"\r\n                  render={({ match }) => {\r\n                    return <MovieDetails itemId={match.params.id} />\r\n                  }}\r\n                />\r\n\r\n                <Route render={() => (<h2>Page not found</h2>)} />\r\n              </Switch>\r\n\r\n            </div>\r\n          </Router>\r\n        </MoviesServiceProvider>\r\n      </ErrorBoundry>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport App from './components/app';\n\nReactDom.render(<App/>, document.getElementById(\"root\"));\n\n\n"],"sourceRoot":""}